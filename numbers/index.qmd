
---
title: "Number Operations"
format:
  revealjs:
    theme: 
      - simple
    css: ../bl.css
    header-includes: |
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet">
code-line-numbers: false
sansfont: "Josefin Sans"
---


## Entrance Ticket {.smaller}

* Look through your classmates' links in today's code forum response <!--TODO--> in UR Courses. 
* There are a lot of the posts, so let's split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.
* Look for a place in a classmate's sketch that uses incrementation or randomness. Copy that section of code.  
* Reply to the post with the line/block of code copied above, and a sentence describing what the code is doing
* **Make sure you reply to at least on post by 10:10**


## Experience levels in this class vary!

Some students in this class have ten years of coding experience. Others have none! 

Try not to judge yourself by what other students can do. It's not a fair race if some started earlier than others.

## Incrementation Operators

Incrementation operators provide shorthand for changing variable values. They're great for animation becuase they can change values over time. 

The most common pattern in programming is increasing a variable by 1:

``` {.javascript code-line-numbers="false"}
x = x + 1; // Traditional way
x++;       // Shorthand - increment by 1
x += 1;    // Also shorthand - increment by 1
```

## Common Incrementation Operators

``` {.javascript code-line-numbers="false"}
x++;     // Increment by 1 (x = x + 1)
x--;     // Decrement by 1 (x = x - 1)
x += 5;  // Add 5 to x (x = x + 5)
x -= 3;  // Subtract 3 from x (x = x - 3)
x *= 2;  // Multiply x by 2 (x = x * 2)
x /= 4;  // Divide x by 4 (x = x / 4)
```

These operators make code cleaner and faster to write!

## Animation with Incrementation {.smaller}

``` {.javascript code-line-numbers="false"}
let x = 0;

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);
  
  // Move circle across screen
  circle(x, 200, 50);
  x++; // Increment x by 1 each frame
  
  // Reset when off screen 
  // we will learn about this soon! 
  // (it's not on the next quiz)
  if (x > width) {
    x = 0;
  }
}
```

[See it live!](https://editor.p5js.org/howshekilledit/sketches/66HdjrHEMy)

## Multiple Incrementation Example {.smaller}

``` {.javascript code-line-numbers="false"}
let x = 0;
let rad = 50;
let red_val = 0;

function setup(){
  createCanvas(400, 400);
}

function draw() {
  background(220);
  
  fill(red_val, 100, 255);
  circle(x, 200, rad);
  
  x += 2;        // Move right by 2 pixels
  rad += 0.5;   // Grow by 0.5 pixels
  red_val ++;         // Increase red_val value by 1
}
```
[See it live!](https://editor.p5js.org/howshekilledit/sketches/IJFMhFA44p)


## The random() Function

The `random()` function generates random numbers, which can create variety and unpredictability in your sketches.

``` {.javascript code-line-numbers="false"}
random();           // Random decimal between 0 and 1
random(10);         // Random decimal between 0 and 10
random(5, 15);      // Random decimal between 5 and 15
random([1,2,3,4]);  // Random item from array
// (arrays are also not on the next quiz)
```

## Basic Random Examples

``` {.javascript code-line-numbers="false"}
function draw() {
  background(220);
  
  // Random position
  let x = random(width);
  let y = random(height);
  
  // Random size
  let diameter = random(20, 80);
  
  // Random color
  fill(random(255), random(255), random(255));
  circle(x, y, diameter);
}
```

This creates a new random circle every frame! [See it live.](https://editor.p5js.org/howshekilledit/sketches/WUhB0MWA0)


# Study for Quiz #3 on Thursday!

There is a study guide in URCourses. Be sure to bring a pen or pencil!


## What's on the Quiz vs. Live Demos

Slides and Coding Train tutorials will include the material you need to know for the next quiz (unless otherwise noted).

<br>

Demos will cover quiz material and may preview more advanced material.


# In confusion lies the seeds to understanding!


## Code along with me! {.center}

![or take notes if you prefer](https://img.tpt.cloud/nextavenue/uploads/2021/09/bobrossestate-01.inside.1280x720.jpg)



## Exit Ticket

Complete today's demo remix <!--TODO--> assignment in URCourses. 

Be sure to submit your link before class is over! 


