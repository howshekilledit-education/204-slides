
---
title: "Boolean Variables"
format:
  revealjs:
    theme: 
      - simple
    css: ../bl.css
    header-includes: |
      <link rel="preconnect" href="https://fonts.googleapis.com">
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
      <link href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet">
code-line-numbers: false
sansfont: "Josefin Sans"
---


## Entrance Ticket {.smaller}

* Look through your classmates' links in today's code forum response <!--TODO--> in UR Courses. 
* There are a lot of the posts, so let's split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.
* Look for a place in a classmate's sketch defined a variable with `let` OR used `mouseX`/`mouseY`. Copy this section of code. 
* Reply to the post with the line/block of code copied above, and a sentence describing what the code is doing
* **Make sure you reply to at least on post by 10:10**


## Experience levels in this class vary!

Some students in this class have ten years of coding experience. Others have none! 

Try not to judge yourself by what other students can do. It's not a fair race if some started earlier than others.

# Review Last Week's Quiz

# Boolean Variables

## What are Boolean Variables?

Boolean variables can only hold two values:

- `true`
- `false`

They're perfect for tracking states like on/off, pressed/not pressed, or visible/hidden.

## Built-in Boolean: mouseIsPressed

P5.js provides `mouseIsPressed` - a boolean that tracks if the mouse is currently being held down.

``` {.javascript code-line-numbers="false"}
function draw() {
  if (mouseIsPressed) {
    background(255, 0, 0); // red when pressed
  } else {
    background(0, 0, 255); // blue when not pressed
  }
}
```

## Creating Your Own Boolean Variables

You can create your own boolean variables to track any state:

``` {.javascript code-line-numbers="false"}
let buttonPressed = false;
let lightOn = true;
let gameOver = false;
```

## Toggling Boolean States

Use `mousePressed()` to toggle your boolean variable:

``` {.javascript code-line-numbers="false"}
function mousePressed() {
  // Toggle the boolean value
  buttonPressed = !buttonPressed;
}
```

The `!` operator flips the boolean value:
- `!true` becomes `false`
- `!false` becomes `true`

## Boolean Logic in Conditionals

Booleans work perfectly with `if` statements:

``` {.javascript code-line-numbers="false"}
if (gameStarted) {
  // run game code
}

if (!gameOver) {  // if NOT game over
  // continue playing
}

if (playerAlive && hasAmmo) {  // AND logic
  // player can shoot
}
```


# Study for Quiz #5 on Thursday! <!--TODO-->

There is a study guide in URCourses. Be sure to bring a pen or pencil!


## What's on the Quiz vs. Live Demos

Slides and Coding Train tutorials will include the material you need to know for the next quiz.

Demos will cover quiz material and may preview more advanced material.


# In confusion lies the seeds to understanding!


## Code along with me! {.center}

![or take notes if you prefer](https://img.tpt.cloud/nextavenue/uploads/2021/09/bobrossestate-01.inside.1280x720.jpg)


## Exit Ticket

Complete **In-class Assignments -> Boolean Variables | Demo Remix** in UR Courses.

Be sure to submit your link before class is over! 


