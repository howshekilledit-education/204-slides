[
  {
    "objectID": "intentionally-random/index.html#how-to-complete-quiz",
    "href": "intentionally-random/index.html#how-to-complete-quiz",
    "title": "Intentionally Random",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\n\n\n\nIf your computer is on, put it to sleep by clicking the apple in the top left, then “Sleep”\nWrite your first and last name\nWrite today’s date, Sept. 18\nUse black/blue pen or pencil\nOnly use the left column\nFill in the correct bubble completely\nYou have twenty minutes."
  },
  {
    "objectID": "intentionally-random/index.html#play-with-randomness",
    "href": "intentionally-random/index.html#play-with-randomness",
    "title": "Intentionally Random",
    "section": "Play with randomness!",
    "text": "Play with randomness!\nGo to In-Class Assignments&gt;Random Shapes, and respond to BOTH forum prompts with screenshots:\n\nPart 1: Try to create a random composition\nPart 2: Let the computer create a random composition"
  },
  {
    "objectID": "intentionally-random/index.html#questions-to-consider",
    "href": "intentionally-random/index.html#questions-to-consider",
    "title": "Intentionally Random",
    "section": "Questions to Consider",
    "text": "Questions to Consider\n\nHow does randomness reflect our world?\nHow can randomness enhance a design?\nHow can you control randomness for design that is both intentional and suprising?"
  },
  {
    "objectID": "intentionally-random/index.html#how-does-human-intention-guide-each-of-these-examples",
    "href": "intentionally-random/index.html#how-does-human-intention-guide-each-of-these-examples",
    "title": "Intentionally Random",
    "section": "How does human intention guide each of these examples?",
    "text": "How does human intention guide each of these examples?"
  },
  {
    "objectID": "intentionally-random/index.html#math-language-brainstorm",
    "href": "intentionally-random/index.html#math-language-brainstorm",
    "title": "Intentionally Random",
    "section": "Math + Language Brainstorm",
    "text": "Math + Language Brainstorm\nIn your first project, you will:\n\nuse coding concepts from Week 1-4\nuse both math and language visually/conceptually. This prompt is open, as long as you can explain how you are using both.\n\nThe professor will set a timer. In your notebook, write and draw about a potential math + language project. Keep your pen moving the whole time. (You may also use a tablet)"
  },
  {
    "objectID": "intentionally-random/index.html#exit-ticket",
    "href": "intentionally-random/index.html#exit-ticket",
    "title": "Intentionally Random",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nTurn in an image of your brainstorm in URCourses: In-Class Assignments &gt; Math + Language Brainstorm"
  },
  {
    "objectID": "conditionals/index.html#project-discussions",
    "href": "conditionals/index.html#project-discussions",
    "title": "Conditionals",
    "section": "Project Discussions",
    "text": "Project Discussions\nGet in a group with your table. Take turns reading your Math + Language project proposal out loud to each other. Give brief, respectful feedback on:\n\nHow the project incoporates math\nHow the project incorporates language\nWhat p5.js features you might use to achieve your goal"
  },
  {
    "objectID": "conditionals/index.html#what-are-conditionals",
    "href": "conditionals/index.html#what-are-conditionals",
    "title": "Conditionals",
    "section": "What are Conditionals?",
    "text": "What are Conditionals?\nConditional statements allow your program to make decisions based on certain conditions. They use boolean expressions that evaluate to either true or false.\nThink of it like: “IF this condition is true, THEN do this action.”"
  },
  {
    "objectID": "conditionals/index.html#boolean-expressions",
    "href": "conditionals/index.html#boolean-expressions",
    "title": "Conditionals",
    "section": "Boolean Expressions",
    "text": "Boolean Expressions\nBoolean expressions compare values and return either true or false:\nlet x = 50;\n\nx &gt; 25     // true\nx &lt; 10     // false\nx == 50    // true (equal to)\nx != 30    // true (not equal to)"
  },
  {
    "objectID": "conditionals/index.html#the-if-statement",
    "href": "conditionals/index.html#the-if-statement",
    "title": "Conditionals",
    "section": "The IF Statement",
    "text": "The IF Statement\nThe basic structure of a conditional statement:\nif (condition) {\n  // code to run if condition is true\n}"
  },
  {
    "objectID": "conditionals/index.html#if-statement-example",
    "href": "conditionals/index.html#if-statement-example",
    "title": "Conditionals",
    "section": "IF Statement Example",
    "text": "IF Statement Example\nfunction draw() {\n  fill(0);  // default black fill\n  background(220);\n\n  // if cursor is on right half of canvas \n  if (mouseX &gt; width/2) {\n    fill(255, 0, 0);  // red fill\n  }\n  \n  circle(mouseX, mouseY, 50);\n}\nThe circle turns red when the mouse is on the right half of the canvas. See it live!"
  },
  {
    "objectID": "conditionals/index.html#comparison-operators",
    "href": "conditionals/index.html#comparison-operators",
    "title": "Conditionals",
    "section": "Comparison Operators",
    "text": "Comparison Operators\n\n&gt; greater than\n&lt; less than\n\n&gt;= greater than or equal to\n&lt;= less than or equal to\n== equal to\n!= not equal to"
  },
  {
    "objectID": "conditionals/index.html#the-else-statement",
    "href": "conditionals/index.html#the-else-statement",
    "title": "Conditionals",
    "section": "The ELSE Statement",
    "text": "The ELSE Statement\nUse else when you want to do something when the condition is false:\nif (mouseX &gt; width/2) {\n  fill(255, 0, 0);    // red on right side\n} else {\n  fill(0, 0, 255);    // blue on left side\n}\nSee it live!"
  },
  {
    "objectID": "conditionals/index.html#multiple-conditions-with-else-if",
    "href": "conditionals/index.html#multiple-conditions-with-else-if",
    "title": "Conditionals",
    "section": "Multiple Conditions with ELSE IF",
    "text": "Multiple Conditions with ELSE IF\nUse else if to check multiple conditions in sequence:\nif (mouseX &lt; width/3) {\n  fill(255, 0, 0);        // red - left third\n} else if (mouseX &lt; 2*width/3) {\n  fill(0, 255, 0);        // green - middle third  \n} else {\n  fill(0, 0, 255);        // blue - right third\n}\nSee it live!"
  },
  {
    "objectID": "conditionals/index.html#complex-example",
    "href": "conditionals/index.html#complex-example",
    "title": "Conditionals",
    "section": "Complex Example",
    "text": "Complex Example\n\nif (mouseX &gt; width/2 && mouseY &gt; height/2) {\n   fill(255, 0, 0);      // red - bottom right\n} else if (mouseX &gt; width/2) {\n   fill(0, 255, 0);      // green - top right\n} else if (mouseY &gt; height/2) {\n   fill(0, 0, 255);      // blue - bottom left\n} else {\n   fill(255, 255, 0);    // yellow - top left\n}\nThe && operator means “AND” - both conditions must be true."
  },
  {
    "objectID": "conditionals/index.html#logical-operators",
    "href": "conditionals/index.html#logical-operators",
    "title": "Conditionals",
    "section": "Logical Operators",
    "text": "Logical Operators\n\n\n\nSymbol\nName\nDescription\n\n\n\n\n&&\nAND\nBoth conditions must be true\n\n\n||\nOR\nAt least one condition must be true\n\n\n!\nNOT\nReverses the boolean value"
  },
  {
    "objectID": "conditionals/index.html#code-along-with-me",
    "href": "conditionals/index.html#code-along-with-me",
    "title": "Conditionals",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "conditionals/index.html#exit-ticket",
    "href": "conditionals/index.html#exit-ticket",
    "title": "Conditionals",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nComplete In-Class Assignments -&gt; Conditionals | Demo Remix in URCourses.\nBe sure to submit your link before class is over!"
  },
  {
    "objectID": "boolean/index.html#entrance-ticket",
    "href": "boolean/index.html#entrance-ticket",
    "title": "Boolean Variables",
    "section": "Entrance Ticket",
    "text": "Entrance Ticket\n\nLook through your classmates’ links in today’s code forum response  in UR Courses.\nThere are a lot of the posts, so let’s split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.\nLook for a place in a classmate’s sketch defined a variable with let OR used mouseX/mouseY. Copy this section of code.\nReply to the post with the line/block of code copied above, and a sentence describing what the code is doing\nMake sure you reply to at least on post by 10:10"
  },
  {
    "objectID": "boolean/index.html#experience-levels-in-this-class-vary",
    "href": "boolean/index.html#experience-levels-in-this-class-vary",
    "title": "Boolean Variables",
    "section": "Experience levels in this class vary!",
    "text": "Experience levels in this class vary!\nSome students in this class have ten years of coding experience. Others have none!\nTry not to judge yourself by what other students can do. It’s not a fair race if some started earlier than others."
  },
  {
    "objectID": "boolean/index.html#what-are-boolean-variables",
    "href": "boolean/index.html#what-are-boolean-variables",
    "title": "Boolean Variables",
    "section": "What are Boolean Variables?",
    "text": "What are Boolean Variables?\nBoolean variables can only hold two values:\n\ntrue\nfalse\n\nThey’re perfect for tracking states like on/off, pressed/not pressed, or visible/hidden."
  },
  {
    "objectID": "boolean/index.html#built-in-boolean-mouseispressed",
    "href": "boolean/index.html#built-in-boolean-mouseispressed",
    "title": "Boolean Variables",
    "section": "Built-in Boolean: mouseIsPressed",
    "text": "Built-in Boolean: mouseIsPressed\nP5.js provides mouseIsPressed - a boolean that tracks if the mouse is currently being held down.\nfunction draw() {\n  if (mouseIsPressed) {\n    background(255, 0, 0); // red when pressed\n  } else {\n    background(0, 0, 255); // blue when not pressed\n  }\n}"
  },
  {
    "objectID": "boolean/index.html#creating-your-own-boolean-variables",
    "href": "boolean/index.html#creating-your-own-boolean-variables",
    "title": "Boolean Variables",
    "section": "Creating Your Own Boolean Variables",
    "text": "Creating Your Own Boolean Variables\nYou can create your own boolean variables to track any state:\nlet buttonPressed = false;\nlet lightOn = true;\nlet gameOver = false;"
  },
  {
    "objectID": "boolean/index.html#toggling-boolean-states",
    "href": "boolean/index.html#toggling-boolean-states",
    "title": "Boolean Variables",
    "section": "Toggling Boolean States",
    "text": "Toggling Boolean States\nUse mousePressed() to toggle your boolean variable:\nfunction mousePressed() {\n  // Toggle the boolean value\n  buttonPressed = !buttonPressed;\n}\nThe ! operator flips the boolean value: - !true becomes false - !false becomes true"
  },
  {
    "objectID": "boolean/index.html#boolean-logic-in-conditionals",
    "href": "boolean/index.html#boolean-logic-in-conditionals",
    "title": "Boolean Variables",
    "section": "Boolean Logic in Conditionals",
    "text": "Boolean Logic in Conditionals\nBooleans work perfectly with if statements:\nif (gameStarted) {\n  // run game code\n}\n\nif (!gameOver) {  // if NOT game over\n  // continue playing\n}\n\nif (playerAlive && hasAmmo) {  // AND logic\n  // player can shoot\n}"
  },
  {
    "objectID": "boolean/index.html#whats-on-the-quiz-vs.-live-demos",
    "href": "boolean/index.html#whats-on-the-quiz-vs.-live-demos",
    "title": "Boolean Variables",
    "section": "What’s on the Quiz vs. Live Demos",
    "text": "What’s on the Quiz vs. Live Demos\nSlides and Coding Train tutorials will include the material you need to know for the next quiz.\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "boolean/index.html#code-along-with-me",
    "href": "boolean/index.html#code-along-with-me",
    "title": "Boolean Variables",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "boolean/index.html#exit-ticket",
    "href": "boolean/index.html#exit-ticket",
    "title": "Boolean Variables",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nComplete In-class Assignments -&gt; Boolean Variables | Demo Remix in UR Courses.\nBe sure to submit your link before class is over!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to CTCH 204, Introduction to Creative Coding!",
    "section": "",
    "text": "Oct 14: Loops\nOct 1: Boolean Variables\nSept 23: Conditionals\nSept 18: Intentionally Random\nSept 16: Numerical Operatons\nSept 11: Color Theory and Coding\nSept 9: Variables and Conventions\nSept 5: Syllabus, p5.js, shapes, colors"
  },
  {
    "objectID": "index.html#lecture-slides",
    "href": "index.html#lecture-slides",
    "title": "Welcome to CTCH 204, Introduction to Creative Coding!",
    "section": "",
    "text": "Oct 14: Loops\nOct 1: Boolean Variables\nSept 23: Conditionals\nSept 18: Intentionally Random\nSept 16: Numerical Operatons\nSept 11: Color Theory and Coding\nSept 9: Variables and Conventions\nSept 5: Syllabus, p5.js, shapes, colors"
  },
  {
    "objectID": "conditionals/index.html#whats-on-the-quiz-vs.-live-demos",
    "href": "conditionals/index.html#whats-on-the-quiz-vs.-live-demos",
    "title": "Conditionals",
    "section": "What’s on the Quiz vs. Live Demos",
    "text": "What’s on the Quiz vs. Live Demos\n\nSlides and Coding Train tutorials will include the material you need to know for the next quiz (unless otherwise stated).\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "words/index.html#how-to-complete-quiz",
    "href": "words/index.html#how-to-complete-quiz",
    "title": "Text Art",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\n\n\n\nDon’t lift your bubble sheet from the quiz until professor says “begin”!\nIf your computer is on, put it to sleep by clicking the apple in the top left, then “Sleep”\nWrite your first and last name\nWrite today’s date, Sept. 25\nUse black/blue pen or pencil\nOnly use the left column\nFill in the correct bubble completely\nYou have twenty minutes."
  },
  {
    "objectID": "words/index.html#project-1-aesthetics-craftsmanship-criteria",
    "href": "words/index.html#project-1-aesthetics-craftsmanship-criteria",
    "title": "Text Art",
    "section": "Project 1 | Aesthetics & Craftsmanship Criteria",
    "text": "Project 1 | Aesthetics & Craftsmanship Criteria\n\nBalanced/intentional composition\nPleasing/intentional use of value/color and attributes like alpha channel, stroke, fill\nEffective/intentional use of animation/interaction"
  },
  {
    "objectID": "words/index.html#project-1-aesthetics-craftsmanship-criteria-1",
    "href": "words/index.html#project-1-aesthetics-craftsmanship-criteria-1",
    "title": "Text Art",
    "section": "Project 1 | Aesthetics & Craftsmanship Criteria",
    "text": "Project 1 | Aesthetics & Craftsmanship Criteria\n\nBalanced/intentional Composition\nPleasing/intentional Use of Value/Color and attributes like alpha channel, stroke, fill\nEffective/intentional use of animation/interaction"
  },
  {
    "objectID": "111/index.html#variables-language",
    "href": "111/index.html#variables-language",
    "title": "Variables, Color, and p5.js",
    "section": "Variables & Language",
    "text": "Variables & Language\n\nA variable is a placeholder for a value that may change.\nComputer variables and natural language might not be as different as you’d think.\nIn English, we use variables all the time!"
  },
  {
    "objectID": "111/index.html#step-1-declare",
    "href": "111/index.html#step-1-declare",
    "title": "Variables, Color, and p5.js",
    "section": "Step 1: Declare",
    "text": "Step 1: Declare\n// Declare variables (usually at the top)\nlet x;\nlet y;\nlet diameter;\nlet speed;\nThis creates the variables but they have no value yet (undefined)."
  },
  {
    "objectID": "111/index.html#step-2-initialize",
    "href": "111/index.html#step-2-initialize",
    "title": "Variables, Color, and p5.js",
    "section": "Step 2: Initialize",
    "text": "Step 2: Initialize\nlet x;\nlet y;\nlet diameter;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // Initialize variables\n  x = 200;\n  y = 200;\n  diameter = 50;\n}\nNow our variables have starting values!"
  },
  {
    "objectID": "111/index.html#understanding-rgb-colors",
    "href": "111/index.html#understanding-rgb-colors",
    "title": "Variables, Color, and p5.js",
    "section": "Understanding RGB Colors",
    "text": "Understanding RGB Colors\nfill(255, 0, 0);     // Pure Red\nfill(0, 255, 0);     // Pure Green  \nfill(0, 0, 255);     // Pure Blue\nfill(255, 255, 0);   // Yellow (Red + Green)\nfill(255, 0, 255);   // Magenta (Red + Blue)\nfill(0, 255, 255);   // Cyan (Green + Blue)\nfill(255, 255, 255); // White\nfill(0, 0, 0);       // Black\nfill(128, 128, 128); // Gray\n\n\nRed, Green, Blue values\nEach value: 0-255 (0 = none, 255 = maximum)\nMix values to create any color"
  },
  {
    "objectID": "111/index.html#munsell-color-system",
    "href": "111/index.html#munsell-color-system",
    "title": "Variables, Color, and p5.js",
    "section": "Munsell Color System",
    "text": "Munsell Color System\nAnother way of conceptualizing/encoding color in terms of:\n\nColor/hue\nValue lightness or darkness\nChroma saturation intensity\n\nFind an interactive Munsell palette here"
  },
  {
    "objectID": "111/index.html#albers-forum-thread",
    "href": "111/index.html#albers-forum-thread",
    "title": "Variables, Color, and p5.js",
    "section": "Albers Forum Thread",
    "text": "Albers Forum Thread\nUse RGB encoding and the Munsell palette. Make your own version of Albers’ illusion."
  },
  {
    "objectID": "111/index.html#interaction-of-color-forum-thread",
    "href": "111/index.html#interaction-of-color-forum-thread",
    "title": "Variables, Color, and p5.js",
    "section": "Interaction of Color | Forum Thread",
    "text": "Interaction of Color | Forum Thread\n\nCreate and log into a p5.js account\nUse RGB encoding and the Munsell palette.\nMake your own version of Albers’ illusion."
  },
  {
    "objectID": "111/index.html#variables-language-1",
    "href": "111/index.html#variables-language-1",
    "title": "Variables, Color, and p5.js",
    "section": "Variables & Language",
    "text": "Variables & Language\n\nA variable is a placeholder for a value that may change.\nComputer variables and natural language might not be as different as you’d think.\nIn English, we use variables all the time!"
  },
  {
    "objectID": "111/index.html#red-variations-forum-thread",
    "href": "111/index.html#red-variations-forum-thread",
    "title": "Variables, Color, and p5.js",
    "section": "Red Variations | Forum Thread",
    "text": "Red Variations | Forum Thread\nFollow the instructions in the “Red Variations” forum thread, to make a p5 sketch about what red is to you. Look at your classmates’ responses to see the variety of ways we can think about and represent a color."
  },
  {
    "objectID": "111/index.html#sometimes-you-can-do-both-at-once",
    "href": "111/index.html#sometimes-you-can-do-both-at-once",
    "title": "Variables, Color, and p5.js",
    "section": "Sometimes, you can do both at once",
    "text": "Sometimes, you can do both at once\nYou can declare and initialize in one step:\nlet x = 200;\nlet y = 200;\nlet diameter = 50;"
  },
  {
    "objectID": "111/index.html#string-variables",
    "href": "111/index.html#string-variables",
    "title": "Variables, Color, and p5.js",
    "section": "String Variables",
    "text": "String Variables\nIf a variable’s value is text, use quotes:\nlet greeting = \"Hello, World!\";\nlet name = 'Morgan';"
  },
  {
    "objectID": "111/index.html#kind-of-like-search-and-replace",
    "href": "111/index.html#kind-of-like-search-and-replace",
    "title": "Variables, Color, and p5.js",
    "section": "Kind of like search and replace…",
    "text": "Kind of like search and replace…"
  },
  {
    "objectID": "111/index.html#pause-video",
    "href": "111/index.html#pause-video",
    "title": "Variables, Color, and p5.js",
    "section": "Pause video",
    "text": "Pause video\nFollow instructions in Forum Creative Coding &gt; Interaction of Color"
  },
  {
    "objectID": "math-language/index.html#sign-up-to-present",
    "href": "math-language/index.html#sign-up-to-present",
    "title": "Math + Language Projects",
    "section": "Sign-up to Present",
    "text": "Sign-up to Present\nIf you haven’t already done so:\n\nSign up in URCourses: Projects &gt; Sign up to Present\nYou will get extra engagement credit if you present on the first day (today)!\nIf you are presenting today, place your link in Projects &gt; Presentation Links &gt; Math + Language, Day 1"
  },
  {
    "objectID": "math-language/index.html#presentation-guidelines",
    "href": "math-language/index.html#presentation-guidelines",
    "title": "Math + Language Projects",
    "section": "Presentation Guidelines",
    "text": "Presentation Guidelines\nShare:\n\nTitle + intentions for your project\nInspirations and resources that helped you\nA detailed overview of 5-15 lines of code\nWhat you are most proud of\nWhat you would do if you had more time"
  },
  {
    "objectID": "math-language/index.html#notes-on-quiz-7",
    "href": "math-language/index.html#notes-on-quiz-7",
    "title": "Math + Language Projects",
    "section": "Notes on Quiz #7",
    "text": "Notes on Quiz #7\n\nQuiz #7 takes place on October 16\nIt will test your knowledge of one section of your Math + Language code project\nYou will receive a print out of your code, with comments removed, along with questions about a subsection of your code"
  },
  {
    "objectID": "math-language/index.html#code-along-with-me",
    "href": "math-language/index.html#code-along-with-me",
    "title": "Math + Language Projects",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "math-language/index.html#exit-ticket",
    "href": "math-language/index.html#exit-ticket",
    "title": "Math + Language Projects",
    "section": "Exit Ticket",
    "text": "Exit Ticket\n\nGo to Projects &gt; Presentation Links &gt; Math + Language, Day 1\nReply to one your peers with\n\nA remix of their p5.js sketch AND\nA screenshot from their sketch, and a note on why it stuck out to you"
  },
  {
    "objectID": "words/index.html#quiz-5-october-2",
    "href": "words/index.html#quiz-5-october-2",
    "title": "Text Art",
    "section": "Quiz #5 October 2",
    "text": "Quiz #5 October 2\nWe will still have a quiz next Thursday. Find the study guide in URCourses!"
  },
  {
    "objectID": "boolean/index.html#how-to-complete-quiz",
    "href": "boolean/index.html#how-to-complete-quiz",
    "title": "Boolean Variables",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\n\n\n\nDon’t lift your bubble sheet from the quiz until professor says “begin”!\nIf your computer is on, put it to sleep by clicking the apple in the top left, then “Sleep”\nWrite your first and last name\nWrite today’s date, Oct. 2\nUse black/blue pen or pencil\nOnly use the left column\nFill in the correct bubble completely\nYou have twenty minutes. # Review Last Week’s Quiz"
  },
  {
    "objectID": "boolean/index.html#a-reminder-about-project-grades",
    "href": "boolean/index.html#a-reminder-about-project-grades",
    "title": "Boolean Variables",
    "section": "A reminder about project grades",
    "text": "A reminder about project grades\n\nIf average grade is too high, everyone might have their grade reduced.\nThe average grade should be around 70% to avoid a downward curve. Please adjust your grade expecations accordingly.\nIn art, 100% is virtually impossible.\n70% is a solid respectable grade."
  },
  {
    "objectID": "math-language-contd/index.html#how-to-complete-quiz",
    "href": "math-language-contd/index.html#how-to-complete-quiz",
    "title": "Math + Language Cont’d",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\n\n\n\nDon’t lift your bubble sheet from the quiz until professor says “begin”!\nIf your computer is on, put it to sleep by clicking the apple in the top left, then “Sleep”\nWrite your first and last name\nWrite today’s date, Oct. 9\nUse dark pen or pencil\nOnly use the left column\nFill in the correct bubble completely\nYou have twenty minutes."
  },
  {
    "objectID": "math-language-contd/index.html#play-with-randomness",
    "href": "math-language-contd/index.html#play-with-randomness",
    "title": "Math + Language Cont’d",
    "section": "Play with randomness!",
    "text": "Play with randomness!\nGo to In-Class Assignments&gt;Random Shapes, and respond to BOTH forum prompts with screenshots:\n\nPart 1: Try to create a random composition\nPart 2: Let the computer create a random composition"
  },
  {
    "objectID": "math-language-contd/index.html#questions-to-consider",
    "href": "math-language-contd/index.html#questions-to-consider",
    "title": "Math + Language Cont’d",
    "section": "Questions to Consider",
    "text": "Questions to Consider\n\nHow does randomness reflect our world?\nHow can randomness enhance a design?\nHow can you control randomness for design that is both intentional and suprising?"
  },
  {
    "objectID": "math-language-contd/index.html#how-does-human-intention-guide-each-of-these-examples",
    "href": "math-language-contd/index.html#how-does-human-intention-guide-each-of-these-examples",
    "title": "Math + Language Cont’d",
    "section": "How does human intention guide each of these examples?",
    "text": "How does human intention guide each of these examples?"
  },
  {
    "objectID": "math-language-contd/index.html#math-language-brainstorm",
    "href": "math-language-contd/index.html#math-language-brainstorm",
    "title": "Math + Language Cont’d",
    "section": "Math + Language Brainstorm",
    "text": "Math + Language Brainstorm\nIn your first project, you will:\n\nuse coding concepts from Week 1-4\nuse both math and language visually/conceptually. This prompt is open, as long as you can explain how you are using both.\n\nThe professor will set a timer. In your notebook, write and draw about a potential math + language project. Keep your pen moving the whole time. (You may also use a tablet)"
  },
  {
    "objectID": "math-language-contd/index.html#exit-ticket",
    "href": "math-language-contd/index.html#exit-ticket",
    "title": "Math + Language Cont’d",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nFollow instructions in URCourses: In-Class Assignments &gt; Creative Research Brainstorm"
  },
  {
    "objectID": "math-language-contd/index.html#presentation-guidelines",
    "href": "math-language-contd/index.html#presentation-guidelines",
    "title": "Math + Language Cont’d",
    "section": "Presentation Guidelines",
    "text": "Presentation Guidelines\nShare:\n\nTitle + intentions for your project\nInspirations and resources that helped you\nA detailed overview of 5-15 lines of code\nWhat you are most proud of\nWhat you would do if you had more time"
  },
  {
    "objectID": "math-language-contd/index.html#creative-research-brainstorm",
    "href": "math-language-contd/index.html#creative-research-brainstorm",
    "title": "Math + Language Cont’d",
    "section": "Creative Research Brainstorm",
    "text": "Creative Research Brainstorm\nPart 1\nIn your second project, due November 3, you will:\n\nUse coding concepts from Week 1-7\nUse research in a creative way, meaning you should directly reference and even analyze outside materials as part of the artwork\n\nFor the first part of your brainstorm, open a blank document in Google Docs or OneDrive. List and/or link sources you might use for your research. Bookmark this document, as you will want to keep track of all works your reference while creating this proeject!"
  },
  {
    "objectID": "math-language-contd/index.html#creative-research-brainstorm-part-1",
    "href": "math-language-contd/index.html#creative-research-brainstorm-part-1",
    "title": "Math + Language Cont’d",
    "section": "Creative Research Brainstorm, Part 1",
    "text": "Creative Research Brainstorm, Part 1\n\nFor the first part of your brainstorm, open a blank document in Google Docs or OneDrive.\nList and/or link sources you might use for your research.\nBookmark this document, as you will want to keep track of all works your reference while creating this proeject!"
  },
  {
    "objectID": "math-language-contd/index.html#creative-research-brainstorm-part-2",
    "href": "math-language-contd/index.html#creative-research-brainstorm-part-2",
    "title": "Math + Language Cont’d",
    "section": "Creative Research Brainstorm | Part 2",
    "text": "Creative Research Brainstorm | Part 2\n\nThe professor will set a timer.\nIn your notebook, write and draw about a potential creative project.\nFeel free to reference resources from part 1.\nKeep your pen moving the whole time. (You may also use a tablet)"
  },
  {
    "objectID": "math-language-contd/index.html#creative-research-assignment-summary",
    "href": "math-language-contd/index.html#creative-research-assignment-summary",
    "title": "Math + Language Cont’d",
    "section": "Creative Research, Assignment Summary",
    "text": "Creative Research, Assignment Summary\nIn your second project, due November 3, you will:\n\nUse coding concepts from Week 1-7\nUse research in a creative way, meaning you should directly reference and even analyze outside materials as part of the artwork\nYou can find some examples in the forum"
  },
  {
    "objectID": "math-language-contd/index.html#brainstorm-part-1",
    "href": "math-language-contd/index.html#brainstorm-part-1",
    "title": "Math + Language Cont’d",
    "section": "Brainstorm, Part 1",
    "text": "Brainstorm, Part 1\n\nFor the first part of your brainstorm, open a blank document in OneDrive.\nList and/or link sources you might use for your research.\nBookmark this document, as you will want to keep track of all works your reference while creating this project!"
  },
  {
    "objectID": "math-language-contd/index.html#brainstorm-part-2",
    "href": "math-language-contd/index.html#brainstorm-part-2",
    "title": "Math + Language Cont’d",
    "section": "Brainstorm, Part 2",
    "text": "Brainstorm, Part 2\n\nThe professor will set a timer.\nIn your notebook, write and draw about a potential creative research project.\nFeel free to reference resources from part 1.\nKeep your pen moving the whole time. (You may also use a tablet)"
  },
  {
    "objectID": "math-language-contd/index.html#assignment-summary",
    "href": "math-language-contd/index.html#assignment-summary",
    "title": "Math + Language Cont’d",
    "section": "Assignment Summary",
    "text": "Assignment Summary\nIn your second project, due November 3, you will:\n\nUse coding concepts from Week 1-7\nUse research in a creative way, meaning you should directly reference and even analyze outside materials as part of the artwork\nYou can find some examples in the forum"
  },
  {
    "objectID": "loops/index.html#entrance-ticket",
    "href": "loops/index.html#entrance-ticket",
    "title": "Loops",
    "section": "Entrance Ticket",
    "text": "Entrance Ticket\n\nLook through your classmates’ links in today’s code forum response  in UR Courses.\nThere are a lot of the posts, so let’s split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.\nLook for a place in a classmate’s sketch defined a variable with let OR used mouseX/mouseY. Copy this section of code.\nReply to the post with the line/block of code copied above, and a sentence describing what the code is doing\nMake sure you reply to at least on post by 10:10"
  },
  {
    "objectID": "loops/index.html#experience-levels-in-this-class-vary",
    "href": "loops/index.html#experience-levels-in-this-class-vary",
    "title": "Loops",
    "section": "Experience levels in this class vary!",
    "text": "Experience levels in this class vary!\nSome students in this class have ten years of coding experience. Others have none!\nTry not to judge yourself by what other students can do. It’s not a fair race if some started earlier than others."
  },
  {
    "objectID": "loops/index.html#what-are-loops",
    "href": "loops/index.html#what-are-loops",
    "title": "Loops",
    "section": "What are Loops?",
    "text": "What are Loops?\nLoops allow you to repeat code without writing it over and over again.\nInstead of writing:\ncircle(50, 200, 40);\ncircle(100, 200, 40);\ncircle(150, 200, 40);\ncircle(200, 200, 40);\ncircle(250, 200, 40);\nYou can use a loop to draw multiple shapes efficiently. See comparison"
  },
  {
    "objectID": "loops/index.html#while-loops",
    "href": "loops/index.html#while-loops",
    "title": "Loops",
    "section": "While Loops",
    "text": "While Loops\nA while loop repeats code as long as a condition is true.\nlet x = 50;\n\nwhile (x &lt; 400) {\n  circle(x, 200, 40);\n  x = x + 50; \n}\nSee it live \nWarning: Make sure the condition eventually becomes false, or you’ll create an infinite loop!"
  },
  {
    "objectID": "loops/index.html#for-loops",
    "href": "loops/index.html#for-loops",
    "title": "Loops",
    "section": "For Loops",
    "text": "For Loops\nA for loop is more structured and commonly used for counting.\nfor (let i = 0; i &lt; 8; i++) {\n  let x = i * 50 + 50;\n  circle(x, 200, 40);\n}\nStructure (stated several ways): for (initialization; condition; update) { ... }  for (start state; while state; change) { ... }  for (&lt;start&gt;; &lt;end&gt;; &lt;in-between-event&gt;) { ... }"
  },
  {
    "objectID": "loops/index.html#for-loop-breakdown",
    "href": "loops/index.html#for-loop-breakdown",
    "title": "Loops",
    "section": "For Loop Breakdown",
    "text": "For Loop Breakdown\nfor (let i = 0; i &lt; 8; i++) {\n  // code to repeat\n}\n\nlet i = 0 - Start with i equal to 0\ni &lt; 8 - Continue while i is less than 8\n\ni++ - Add 1 to i after each loop\nResult: Loop runs 8 times (i = 0,1,2,3,4,5,6,7)"
  },
  {
    "objectID": "loops/index.html#using-the-loop-counter",
    "href": "loops/index.html#using-the-loop-counter",
    "title": "Loops",
    "section": "Using the Loop Counter",
    "text": "Using the Loop Counter\nfor (let i = 0; i &lt; 8; i++) {\n  let diameter = i * 10 + 20; \n  circle(200, 200, diameter);\n}\nThis creates concentric circles. What happens when you change initial and terminating conditions? See it live"
  },
  {
    "objectID": "loops/index.html#nested-loops",
    "href": "loops/index.html#nested-loops",
    "title": "Loops",
    "section": "Nested Loops",
    "text": "Nested Loops\nYou can put loops inside other loops to create grids and patterns.\nfor (let i = 0; i &lt; 5; i++) {        // rows\n  for (let j = 0; j &lt; 5; j++) {      // columns\n    let x = j * 60 + 30;\n    let y = i * 60 + 30;\n    circle(x, y, 40);\n  }\n}\nThis creates a 5×5 grid of circles!"
  },
  {
    "objectID": "loops/index.html#how-nested-loops-work",
    "href": "loops/index.html#how-nested-loops-work",
    "title": "Loops",
    "section": "How Nested Loops Work",
    "text": "How Nested Loops Work\nfor (let i = 0; i &lt; 3; i++) {        // Outer loop: i = 0,1,2\n  for (let j = 0; j &lt; 3; j++) {      // Inner loop: j = 0,1,2\n    // This runs 9 times total!\n    // (0,0) (0,1) (0,2) (1,0) (1,1) (1,2) (2,0) (2,1) (2,2)\n  }\n}\n\nOuter loop runs 3 times\nInner loop runs 3 times for each outer loop\nTotal: 3 × 3 = 9 repetitions\nSee it live"
  },
  {
    "objectID": "loops/index.html#loops-in-draw",
    "href": "loops/index.html#loops-in-draw",
    "title": "Loops",
    "section": "Loops in draw()",
    "text": "Loops in draw()\nWhen you put loops inside draw(), they run every frame:\nfunction draw() {\n  background(220);\n  \n  for (let i = 0; i &lt; 10; i++) {\n    let x = i * 40 + 20;\n    let y = mouseY;  // Follow mouse vertically\n    circle(x, y, 30);\n  }\n}\nThis creates a row of circles that follows your mouse. See it live"
  },
  {
    "objectID": "loops/index.html#creative-loop-examples",
    "href": "loops/index.html#creative-loop-examples",
    "title": "Loops",
    "section": "Creative Loop Examples",
    "text": "Creative Loop Examples\n// Spiral pattern\nfor (let i = 0; i &lt; 100; i++) {\n  let angle = i * 0.1;\n  let x = cos(angle) * i + width/2;\n  let y = sin(angle) * i + height/2;\n  circle(x, y, 5);\n}\n// Rainbow circles\nfor (let i = 0; i &lt; 10; i++) {\n  fill(i * 25, 100, 200);\n  circle(i * 40 + 20, 200, 35);\n}"
  },
  {
    "objectID": "loops/index.html#whats-on-the-quiz-vs.-live-demos",
    "href": "loops/index.html#whats-on-the-quiz-vs.-live-demos",
    "title": "Loops",
    "section": "What’s on the Quiz vs. Live Demos",
    "text": "What’s on the Quiz vs. Live Demos\nSlides and Coding Train tutorials will include the material you need to know for the next quiz.\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "loops/index.html#code-along-with-me",
    "href": "loops/index.html#code-along-with-me",
    "title": "Loops",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "loops/index.html#exit-ticket",
    "href": "loops/index.html#exit-ticket",
    "title": "Loops",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nComplete today’s demo remix assignment in URCourses &gt; In-Class Assignments &gt; Loops | Demo Remix.\nBe sure to submit your link before class is over!"
  },
  {
    "objectID": "math-language-contd/index.html#notes-on-quiz-7",
    "href": "math-language-contd/index.html#notes-on-quiz-7",
    "title": "Math + Language Cont’d",
    "section": "Notes on Quiz #7",
    "text": "Notes on Quiz #7\n\nQuiz #7 takes place on October 16\nIt will test your knowledge of one section of your Math + Language code project\nYou will receive a print out of your code, with comments removed, along with questions about a subsection of your code\nYou can find a sample quiz in URCourses"
  },
  {
    "objectID": "loops/index.html#creative-research",
    "href": "loops/index.html#creative-research",
    "title": "Loops",
    "section": "Creative Research",
    "text": "Creative Research\n\nSee multiple examples in this week’s forum.\nWhat research does each artist bring in?\nHow does each project apply artistic methods to research?\nHow do creative methodologies give the research new meaning?"
  },
  {
    "objectID": "loops/index.html#arrays",
    "href": "loops/index.html#arrays",
    "title": "Loops",
    "section": "Arrays",
    "text": "Arrays\nArrays store multiple values in a single variable.\nlet colors = ['red', 'green', 'blue', 'yellow'];\nconsole.log(colors[0]); // 'red'"
  },
  {
    "objectID": "loops/index.html#arrays-and-for-loops-work-great-together",
    "href": "loops/index.html#arrays-and-for-loops-work-great-together",
    "title": "Loops",
    "section": "Arrays and for loops work great together!",
    "text": "Arrays and for loops work great together!\nlet colors = ['red', 'green', 'blue', 'yellow'];\nfor (let i = 0; i &lt; colors.length; i++) {\n  fill(colors[i]);\n  circle(i * 60 + 30, 200, 40);\n}\nSee it live"
  },
  {
    "objectID": "loops/index.html#notes-on-quiz-7",
    "href": "loops/index.html#notes-on-quiz-7",
    "title": "Loops",
    "section": "Notes on Quiz #7",
    "text": "Notes on Quiz #7\n\nQuiz #7 takes place this Thursday, October 16\nIt will test your knowledge of one section of your Math + Language code project\nYou will receive a print out of your code, with comments removed, along with questions about a subsection of your code\nYou can find a sample quiz in URCourses"
  },
  {
    "objectID": "loops/index.html#arrays-and-for-loops",
    "href": "loops/index.html#arrays-and-for-loops",
    "title": "Loops",
    "section": "Arrays and for loops",
    "text": "Arrays and for loops\nlet colors = ['red', 'green', 'blue', 'yellow'];\nfor (let i = 0; i &lt; colors.length; i++) {\n  fill(colors[i]);\n  circle(i * 60 + 30, 200, 40);\n}\nSee it live"
  },
  {
    "objectID": "variables-conventions/pool.html#what-well-learn-today",
    "href": "variables-conventions/pool.html#what-well-learn-today",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "What We’ll Learn Today",
    "text": "What We’ll Learn Today\n\nBuilt-in mouse variables: mouseX, mouseY, mousePressed\nCreating and using custom variables\nThe three steps of working with variables\nMaking interactive animations\nGlobal vs local variables"
  },
  {
    "objectID": "variables-conventions/pool.html#built-in-mouse-variables",
    "href": "variables-conventions/pool.html#built-in-mouse-variables",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Built-in Mouse Variables",
    "text": "Built-in Mouse Variables\nP5.js provides several built-in variables for mouse interaction:\n\nmouseX - Current horizontal position of mouse\nmouseY - Current vertical position of mouse\n\nmousePressed - Boolean: true when mouse button is pressed\n\nThese update automatically every frame!"
  },
  {
    "objectID": "variables-conventions/pool.html#basic-mouse-tracking",
    "href": "variables-conventions/pool.html#basic-mouse-tracking",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Basic Mouse Tracking",
    "text": "Basic Mouse Tracking\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  // Circle follows mouse\n  fill(255, 100, 100);\n  circle(mouseX, mouseY, 50);\n  \n  // Display coordinates\n  fill(0);\n  text(`x: ${mouseX}, y: ${mouseY}`, 10, 20);\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#the-three-steps-of-variables",
    "href": "variables-conventions/pool.html#the-three-steps-of-variables",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "The Three Steps of Variables",
    "text": "The Three Steps of Variables\n1. Declare - Tell the program the variable exists\n2. Initialize - Give it an initial value\n3. Use - Put it to work in your code"
  },
  {
    "objectID": "variables-conventions/pool.html#step-1-declare",
    "href": "variables-conventions/pool.html#step-1-declare",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Step 1: Declare",
    "text": "Step 1: Declare\n// Declare variables (usually at the top)\nlet x;\nlet y;\nlet diameter;\nlet speed;\nThis creates the variables but they have no value yet (undefined)."
  },
  {
    "objectID": "variables-conventions/pool.html#step-2-initialize",
    "href": "variables-conventions/pool.html#step-2-initialize",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Step 2: Initialize",
    "text": "Step 2: Initialize\nlet x;\nlet y;\nlet diameter;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // Initialize variables\n  x = 200;\n  y = 200;\n  diameter = 50;\n}\nNow our variables have starting values!"
  },
  {
    "objectID": "variables-conventions/pool.html#step-3-use",
    "href": "variables-conventions/pool.html#step-3-use",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Step 3: Use",
    "text": "Step 3: Use\nfunction draw() {\n  background(220);\n  \n  // Use the variables\n  fill(255, 100, 150);\n  circle(x, y, diameter);\n}\nThe variables control the circle’s position and size."
  },
  {
    "objectID": "variables-conventions/pool.html#combining-declaration-initialization",
    "href": "variables-conventions/pool.html#combining-declaration-initialization",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Combining Declaration & Initialization",
    "text": "Combining Declaration & Initialization\nYou can do both steps at once:\n// Combined approach\nlet x = 200;\nlet y = 200;\nlet diameter = 50;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\nThis is more concise and often preferred."
  },
  {
    "objectID": "variables-conventions/pool.html#global-variables",
    "href": "variables-conventions/pool.html#global-variables",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Global Variables",
    "text": "Global Variables\nVariables declared outside functions are global:\nlet x = 200;  // Global - accessible everywhere\nlet y = 200;  // Global - accessible everywhere\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  circle(x, y, 50);  // Can use x and y here\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#making-things-move",
    "href": "variables-conventions/pool.html#making-things-move",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Making Things Move",
    "text": "Making Things Move\nTo animate, we need to change variable values over time:\nlet x = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  circle(x, 200, 50);\n  x = x + 1;  // Move right each frame\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#interactive-movement",
    "href": "variables-conventions/pool.html#interactive-movement",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Interactive Movement",
    "text": "Interactive Movement\nCombine mouse variables with custom variables:\nlet x = 200;\nlet y = 200;\n\nfunction draw() {\n  background(220);\n  \n  // Move towards mouse position\n  x = x + (mouseX - x) * 0.05;\n  y = y + (mouseY - y) * 0.05;\n  \n  circle(x, y, 50);\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#growing-circle-example",
    "href": "variables-conventions/pool.html#growing-circle-example",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Growing Circle Example",
    "text": "Growing Circle Example\nlet diameter = 50;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  // Grow when mouse pressed\n  if (mousePressed) {\n    diameter = diameter + 2;\n  }\n  \n  circle(mouseX, mouseY, diameter);\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#color-change-on-click",
    "href": "variables-conventions/pool.html#color-change-on-click",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Color Change on Click",
    "text": "Color Change on Click\nlet r = 255;\nlet g = 100;\nlet b = 100;\n\nfunction draw() {\n  background(220);\n  \n  // Change color when pressed\n  if (mousePressed) {\n    r = random(255);\n    g = random(255);\n    b = random(255);\n  }\n  \n  fill(r, g, b);\n  circle(mouseX, mouseY, 80);\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#multiple-moving-objects",
    "href": "variables-conventions/pool.html#multiple-moving-objects",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Multiple Moving Objects",
    "text": "Multiple Moving Objects\nlet x1 = 100, y1 = 200;\nlet x2 = 300, y2 = 200;\nlet speed1 = 2, speed2 = -1.5;\n\nfunction draw() {\n  background(220);\n  \n  // First circle\n  circle(x1, y1, 50);\n  x1 += speed1;\n  \n  // Second circle  \n  circle(x2, y2, 40);\n  x2 += speed2;\n  \n  // Bounce off edges\n  if (x1 &gt; width || x1 &lt; 0) speed1 *= -1;\n  if (x2 &gt; width || x2 &lt; 0) speed2 *= -1;\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#mouse-events",
    "href": "variables-conventions/pool.html#mouse-events",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Mouse Events",
    "text": "Mouse Events\nBeyond mousePressed, p5.js offers mouse event functions:\nfunction mousePressed() {\n  // Called once when mouse is pressed\n  diameter = random(20, 100);\n}\n\nfunction mouseReleased() {\n  // Called once when mouse is released\n  diameter = 50;\n}\n\nfunction mouseMoved() {\n  // Called when mouse moves\n  backgroundColor = random(255);\n}"
  },
  {
    "objectID": "variables-conventions/pool.html#practice-exercise",
    "href": "variables-conventions/pool.html#practice-exercise",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Practice Exercise",
    "text": "Practice Exercise\nCreate a sketch that:\n\nHas a circle that follows the mouse\nChanges size when mouse is pressed\nChanges color when mouse is released\nLeaves a trail as it moves\n\nTry combining mouseX, mouseY, mousePressed with your own variables!"
  },
  {
    "objectID": "variables-conventions/pool.html#key-takeaways",
    "href": "variables-conventions/pool.html#key-takeaways",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nmouseX, mouseY automatically track mouse position\nmousePressed detects when mouse button is held down\nCustom variables need: declare, initialize, use\nGlobal variables are accessible throughout your program\nAnimation = changing variable values over time\nCombine built-in and custom variables for rich interactions"
  },
  {
    "objectID": "variables-conventions/pool.html#next-steps",
    "href": "variables-conventions/pool.html#next-steps",
    "title": "P5.js Variables and Mouse Interaction",
    "section": "Next Steps",
    "text": "Next Steps\n\nExperiment with different variable types\nTry incrementation operators (++, +=)\nExplore other built-in variables (width, height, frameCount)\nCreate more complex interactive animations\n\nHappy coding! 🎨✨"
  },
  {
    "objectID": "numbers/index.html#entrance-ticket",
    "href": "numbers/index.html#entrance-ticket",
    "title": "Number Operations",
    "section": "Entrance Ticket",
    "text": "Entrance Ticket\n\nLook through your classmates’ links in today’s code forum response  in UR Courses.\nThere are a lot of the posts, so let’s split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.\nLook for a place in a classmate’s sketch that uses incrementation or randomness. Copy that section of code.\n\nReply to the post with the line/block of code copied above, and a sentence describing what the code is doing\nMake sure you reply to at least on post by 10:10"
  },
  {
    "objectID": "numbers/index.html#experience-levels-in-this-class-vary",
    "href": "numbers/index.html#experience-levels-in-this-class-vary",
    "title": "Number Operations",
    "section": "Experience levels in this class vary!",
    "text": "Experience levels in this class vary!\nSome students in this class have ten years of coding experience. Others have none!\nTry not to judge yourself by what other students can do. It’s not a fair race if some started earlier than others."
  },
  {
    "objectID": "numbers/index.html#incrementation-operators",
    "href": "numbers/index.html#incrementation-operators",
    "title": "Number Operations",
    "section": "Incrementation Operators",
    "text": "Incrementation Operators\nIncrementation operators provide shorthand for changing variable values. They’re great for animation becuase they can change values over time.\nThe most common pattern in programming is increasing a variable by 1:\nx = x + 1; // Traditional way\nx++;       // Shorthand - increment by 1\nx += 1;    // Also shorthand - increment by 1"
  },
  {
    "objectID": "numbers/index.html#common-incrementation-operators",
    "href": "numbers/index.html#common-incrementation-operators",
    "title": "Number Operations",
    "section": "Common Incrementation Operators",
    "text": "Common Incrementation Operators\nx++;     // Increment by 1 (x = x + 1)\nx--;     // Decrement by 1 (x = x - 1)\nx += 5;  // Add 5 to x (x = x + 5)\nx -= 3;  // Subtract 3 from x (x = x - 3)\nx *= 2;  // Multiply x by 2 (x = x * 2)\nx /= 4;  // Divide x by 4 (x = x / 4)\nThese operators make code cleaner and faster to write!"
  },
  {
    "objectID": "numbers/index.html#animation-with-incrementation",
    "href": "numbers/index.html#animation-with-incrementation",
    "title": "Number Operations",
    "section": "Animation with Incrementation",
    "text": "Animation with Incrementation\nlet x = 0;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  // Move circle across screen\n  circle(x, 200, 50);\n  x++; // Increment x by 1 each frame\n  \n  // Reset when off screen \n  // we will learn about this soon! \n  // (it's not on the next quiz)\n  if (x &gt; width) {\n    x = 0;\n  }\n}\nSee it live!"
  },
  {
    "objectID": "numbers/index.html#multiple-incrementation-example",
    "href": "numbers/index.html#multiple-incrementation-example",
    "title": "Number Operations",
    "section": "Multiple Incrementation Example",
    "text": "Multiple Incrementation Example\nlet x = 0;\nlet rad = 50;\nlet red_val = 0;\n\nfunction setup(){\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n  \n  fill(red_val, 100, 255);\n  circle(x, 200, rad);\n  \n  x += 2;        // Move right by 2 pixels\n  rad += 0.5;   // Grow by 0.5 pixels\n  red_val ++;         // Increase red_val value by 1\n}\nSee it live!"
  },
  {
    "objectID": "numbers/index.html#the-random-function",
    "href": "numbers/index.html#the-random-function",
    "title": "Number Operations",
    "section": "The random() Function",
    "text": "The random() Function\nThe random() function generates random numbers, which can create variety and unpredictability in your sketches.\nrandom();           // Random decimal between 0 and 1\nrandom(10);         // Random decimal between 0 and 10\nrandom(5, 15);      // Random decimal between 5 and 15\nrandom([1,2,3,4]);  // Random item from array\n// (arrays are also not on the next quiz)"
  },
  {
    "objectID": "numbers/index.html#basic-random-examples",
    "href": "numbers/index.html#basic-random-examples",
    "title": "Number Operations",
    "section": "Basic Random Examples",
    "text": "Basic Random Examples\nfunction draw() {\n  background(220);\n  \n  // Random position\n  let x = random(width);\n  let y = random(height);\n  \n  // Random size\n  let diameter = random(20, 80);\n  \n  // Random color\n  fill(random(255), random(255), random(255));\n  circle(x, y, diameter);\n}\nThis creates a new random circle every frame! See it live."
  },
  {
    "objectID": "numbers/index.html#whats-on-the-quiz-vs.-live-demos",
    "href": "numbers/index.html#whats-on-the-quiz-vs.-live-demos",
    "title": "Number Operations",
    "section": "What’s on the Quiz vs. Live Demos",
    "text": "What’s on the Quiz vs. Live Demos\nSlides and Coding Train tutorials will include the material you need to know for the next quiz (unless otherwise noted).\n\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "numbers/index.html#code-along-with-me",
    "href": "numbers/index.html#code-along-with-me",
    "title": "Number Operations",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "numbers/index.html#exit-ticket",
    "href": "numbers/index.html#exit-ticket",
    "title": "Number Operations",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nComplete today’s demo remix  assignment in URCourses.\nBe sure to submit your link before class is over!"
  },
  {
    "objectID": "welcome/index.html#introductions",
    "href": "welcome/index.html#introductions",
    "title": "Welcome to 204",
    "section": "Introductions",
    "text": "Introductions\nLet’s go around and introduce ourselves.\n\nYour name\nYour pronouns (if you want)\nTalk a little bit about why you chose your piece of media\nYour name again"
  },
  {
    "objectID": "welcome/index.html#cartesian-coordinates",
    "href": "welcome/index.html#cartesian-coordinates",
    "title": "Welcome to 204",
    "section": "Cartesian Coordinates",
    "text": "Cartesian Coordinates\n\n\n\n\nMost graphical software uses a Cartesian coordinate system to define where things are on the screen."
  },
  {
    "objectID": "welcome/index.html#next-class",
    "href": "welcome/index.html#next-class",
    "title": "Welcome to 204",
    "section": "Next class",
    "text": "Next class\n\nNext class, we will have a syllabus quiz (you may reference the syllabus). This will be the last quiz where you can look at outside resources. After that, all quizzes will be closed book.\n\nMake sure you bring a pen or pencil! (Note that you should bring a notebook and pen/pencil to every class.)"
  },
  {
    "objectID": "variables-conventions/index.html#entrance-ticket",
    "href": "variables-conventions/index.html#entrance-ticket",
    "title": "Variables & Conventions",
    "section": "Entrance Ticket",
    "text": "Entrance Ticket\n\nLook through your classmates’ links in Forum Response 2 | Variables & Conventions in UR Courses.\nThere are a lot of the posts, so let’s split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.\nLook for a place in a classmate’s sketch defined a variable with let OR used mouseX/mouseY. Copy this section of code.\nReply to the post with the line/block of code copied above, and a sentence describing what the code is doing\nMake sure you reply to at least on post by 10:10"
  },
  {
    "objectID": "variables-conventions/index.html#experience-levels-in-this-class-vary",
    "href": "variables-conventions/index.html#experience-levels-in-this-class-vary",
    "title": "Variables & Conventions",
    "section": "Experience levels in this class vary!",
    "text": "Experience levels in this class vary!\nSome students in this class have ten years of coding experience. Others have none!\nTry not to judge yourself by what other students can do. It’s not a fair race if some started earlier than others."
  },
  {
    "objectID": "variables-conventions/index.html#comments",
    "href": "variables-conventions/index.html#comments",
    "title": "Variables & Conventions",
    "section": "Comments",
    "text": "Comments\nCode comments are text in your code that your computer can’t see. They are great for muting code or explaining it.\n\nlet cx = width/2; // sets center to half canvas width\n// let cx = width/4; // sets center to 1/4 canvas size"
  },
  {
    "objectID": "variables-conventions/index.html#console",
    "href": "variables-conventions/index.html#console",
    "title": "Variables & Conventions",
    "section": "Console",
    "text": "Console\nThe code console allows you to debug your code. You can see errors or log anything you wish with console.log()"
  },
  {
    "objectID": "variables-conventions/index.html#variables",
    "href": "variables-conventions/index.html#variables",
    "title": "Variables & Conventions",
    "section": "Variables",
    "text": "Variables\nImagine variables as search and replace. Every time a variable appears, you could simply replace it with its value and the code would be the same.\nThe power here is that the value can VARY.\nYoda example"
  },
  {
    "objectID": "variables-conventions/index.html#built-in-p5-variables",
    "href": "variables-conventions/index.html#built-in-p5-variables",
    "title": "Variables & Conventions",
    "section": "Built-in p5 Variables",
    "text": "Built-in p5 Variables\nP5.js provides several built-in variables for mouse interaction and animation:\n\nmouseX - Current horizontal position of mouse\nmouseY - Current vertical position of mouse\n\nframeCount - The number of frames that have been displayed since the program started\n\nThese update automatically every frame!"
  },
  {
    "objectID": "variables-conventions/index.html#built-in-variables-example",
    "href": "variables-conventions/index.html#built-in-variables-example",
    "title": "Variables & Conventions",
    "section": "Built-in variables example",
    "text": "Built-in variables example\nfunction draw() {\n  background(255, 0, 0);\n  // sets fill based on location in loop\n  fill(frameCount%255);\n  // draws circle at mouse position\n  // with radius based on frames elapsed\n  circle(mouseX, mouseY, frameCount%width);\n}\nSee this example in web editor"
  },
  {
    "objectID": "variables-conventions/index.html#section",
    "href": "variables-conventions/index.html#section",
    "title": "Variables & Conventions",
    "section": "",
    "text": "let &lt;name&gt; = &lt;value&gt;;"
  },
  {
    "objectID": "variables-conventions/index.html#step-1-declare",
    "href": "variables-conventions/index.html#step-1-declare",
    "title": "Variables & Conventions",
    "section": "Step 1: Declare",
    "text": "Step 1: Declare\n// Declare variables (usually at the top)\nlet x;\nlet y;\nlet diameter;\nlet speed;\nThis creates the variables but they have no value yet (undefined)."
  },
  {
    "objectID": "variables-conventions/index.html#step-2-initialize",
    "href": "variables-conventions/index.html#step-2-initialize",
    "title": "Variables & Conventions",
    "section": "Step 2: Initialize",
    "text": "Step 2: Initialize\nlet x;\nlet y;\nlet diameter;\n\nfunction setup() {\n  createCanvas(400, 400);\n  \n  // Initialize variables\n  x = 200;\n  y = 200;\n  diameter = 50;\n}\nNow our variables have starting values!"
  },
  {
    "objectID": "variables-conventions/index.html#step-3-use",
    "href": "variables-conventions/index.html#step-3-use",
    "title": "Variables & Conventions",
    "section": "Step 3: Use",
    "text": "Step 3: Use\nfunction draw() {\n  background(220);\n  \n  // Use the variables\n  fill(255, 100, 150);\n  circle(x, y, diameter);\n}\nThe variables control the circle’s position and size."
  },
  {
    "objectID": "variables-conventions/index.html#combining-declaration-initialization",
    "href": "variables-conventions/index.html#combining-declaration-initialization",
    "title": "Variables & Conventions",
    "section": "Combining Declaration & Initialization",
    "text": "Combining Declaration & Initialization\nYou can do both steps at once:\n// Combined approach\nlet x = 200;\nlet y = 200;\nlet diameter = 50;\n\nfunction setup() {\n  createCanvas(400, 400);\n}\nThis is more concise and often preferred."
  },
  {
    "objectID": "variables-conventions/index.html#datatypes",
    "href": "variables-conventions/index.html#datatypes",
    "title": "Variables & Conventions",
    "section": "Datatypes",
    "text": "Datatypes\n\n// \"strings\" are text values, and should go in quotes\n\nlet lastName = \"Green\";\n\n// ints are numerical values, and should NOT go in quotes\n\nlet year = 2025;"
  },
  {
    "objectID": "variables-conventions/index.html#mouse-events",
    "href": "variables-conventions/index.html#mouse-events",
    "title": "Variables & Conventions",
    "section": "Mouse Events",
    "text": "Mouse Events\nP5.js has several built-in mouse events that you can use to trigger code when the mouse is pressed, released, or moved.\n\nfunction mousePressed() {\n  // Called once when mouse is pressed\n  diameter = random(20, 100);\n}\n\nfunction mouseReleased() {\n  // Called once when mouse is released\n  diameter = 50;\n}\n\nfunction mouseMoved() {\n  // Called when mouse moves\n  backgroundColor += 2;\n}\nSee full sketch in p5 web editor"
  },
  {
    "objectID": "variables-conventions/index.html#whats-on-the-quiz-vs.-live-demos",
    "href": "variables-conventions/index.html#whats-on-the-quiz-vs.-live-demos",
    "title": "Variables & Conventions",
    "section": "What’s on the Quiz vs. Live Demos",
    "text": "What’s on the Quiz vs. Live Demos\nSlides and Coding Train tutorials will include the material you need to know for the next quiz.\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "variables-conventions/index.html#code-along-with-me",
    "href": "variables-conventions/index.html#code-along-with-me",
    "title": "Variables & Conventions",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "variables-conventions/index.html#exit-ticket",
    "href": "variables-conventions/index.html#exit-ticket",
    "title": "Variables & Conventions",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nComplete Variables | Demo Remix assignment in URCourses.\nBe sure to submit your link before class is over!"
  },
  {
    "objectID": "getting-started/index.html#entrance-ticket",
    "href": "getting-started/index.html#entrance-ticket",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Entrance Ticket",
    "text": "Entrance Ticket\n\nLook through your classmates’ links in Forum Response 1 | Shapes and Colors in UR Courses.\nThere are a lot of the posts, so let’s split them up. If you are at the front of the room, look at posts at top; middle, middle; back, bottom.\nIf you notice anything that stands out to you, reply with a comment!\nMake sure you reply to at least on post by 10:10"
  },
  {
    "objectID": "getting-started/index.html#experience-levels-in-this-class-vary",
    "href": "getting-started/index.html#experience-levels-in-this-class-vary",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Experience levels in this class vary!",
    "text": "Experience levels in this class vary!\nSome students in this class have ten years of coding experiencce. Others have none!\nTry not to judge yourself by what other students can do. It’s not a fair race if some started earlier than others."
  },
  {
    "objectID": "getting-started/index.html#you-can-have-a-one-week-extension-on-one-of-your-first-two-projects.",
    "href": "getting-started/index.html#you-can-have-a-one-week-extension-on-one-of-your-first-two-projects.",
    "title": "Syllabus, Shapes, and Colors",
    "section": "You can have a one-week extension on ONE of your first two projects.",
    "text": "You can have a one-week extension on ONE of your first two projects.\nOtherwise, late work is not accepted."
  },
  {
    "objectID": "getting-started/index.html#if-average-grade-is-too-high-everyone-might-have-their-grade-reduced.",
    "href": "getting-started/index.html#if-average-grade-is-too-high-everyone-might-have-their-grade-reduced.",
    "title": "Syllabus, Shapes, and Colors",
    "section": "If average grade is too high, everyone might have their grade reduced.",
    "text": "If average grade is too high, everyone might have their grade reduced.\nThe average grade should be around 70% to avoid a downward curve. Please adjust your grade expecations accordingly."
  },
  {
    "objectID": "getting-started/index.html#participation-is-an-important-part-of-your-grade.",
    "href": "getting-started/index.html#participation-is-an-important-part-of-your-grade.",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Participation is an important part of your grade.",
    "text": "Participation is an important part of your grade.\nYour engagement score includes speaking in class, attendance, and in-class activities."
  },
  {
    "objectID": "getting-started/index.html#how-to-complete-quiz",
    "href": "getting-started/index.html#how-to-complete-quiz",
    "title": "Syllabus, Shapes, and Colors",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\n\n\n\nWrite your first and last name\nWrite today’s date, Sept. 4\nUse black/blue pen or pencil\nOnly use the left column\nFill in the correct bubble completely\nYou have twenty minutes\n\nYou can reference the syllabus on UR Courses, or I have a few paper copies.\nThis is the last quiz where you can reference outside materials."
  },
  {
    "objectID": "getting-started/index.html#whats-on-the-quiz-vs.-whats-in-class",
    "href": "getting-started/index.html#whats-on-the-quiz-vs.-whats-in-class",
    "title": "Syllabus, Shapes, and Colors",
    "section": "What’s on the Quiz vs. What’s in Class",
    "text": "What’s on the Quiz vs. What’s in Class\nSlides and Coding Train tutorials will include the material you need to know for the next quiz.\nDemos will cover quiz material and may preview more advanced material."
  },
  {
    "objectID": "getting-started/index.html#what-is-p5.js",
    "href": "getting-started/index.html#what-is-p5.js",
    "title": "Syllabus, Shapes, and Colors",
    "section": "What is p5.js?",
    "text": "What is p5.js?\n\nA JavaScript library for creative coding\nMakes coding accessible for artists, designers, and beginners\nBased on Processing programming language\nRuns in web browsers"
  },
  {
    "objectID": "getting-started/index.html#section",
    "href": "getting-started/index.html#section",
    "title": "Syllabus, Shapes, and Colors",
    "section": "() {} []",
    "text": "() {} []\nParentheses ()\nCurly braces {}\nSquare brackets []\n^These always come in pairs!"
  },
  {
    "objectID": "getting-started/index.html#p5.js-setup-draw",
    "href": "getting-started/index.html#p5.js-setup-draw",
    "title": "Syllabus, Shapes, and Colors",
    "section": "p5.js setup() & draw()",
    "text": "p5.js setup() & draw()\n// &lt;-- Variables you might access throughout your project goe on top. \n// Everything else should go {INSIDE A FUNCTION}\n\nfunction setup(){\n\n    // &lt;-- Instructions in here execute AT THE START\n\n}\n\nfunction draw(){\n\n    // &lt;-- Instructions in here execute next, \n    // either over and over on a loop (default), \n    // or just once (if noLoop() is called)\n\n}"
  },
  {
    "objectID": "getting-started/index.html#core-structure-setup",
    "href": "getting-started/index.html#core-structure-setup",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Core Structure: setup()",
    "text": "Core Structure: setup()\nfunction setup() {\n  // Runs once when program starts\n  createCanvas(400, 400);\n  background(220);\n}\n\nsetup() runs once at the beginning\nUse it to initialize your canvas and set initial conditions\nPerfect place for createCanvas() and one-time configurations"
  },
  {
    "objectID": "getting-started/index.html#core-structure-draw",
    "href": "getting-started/index.html#core-structure-draw",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Core Structure: draw()",
    "text": "Core Structure: draw()\nfunction draw() {\n  // Runs continuously, ~60 times per second\n  background(220);\n  ellipse(mouseX, mouseY, 50, 50);\n}\n\ndraw() runs continuously (like animation frames)\nDefault frame rate: 60 FPS\nUse for animations and interactive elements\nOften starts with background() to clear previous frame"
  },
  {
    "objectID": "getting-started/index.html#createcanvas",
    "href": "getting-started/index.html#createcanvas",
    "title": "Syllabus, Shapes, and Colors",
    "section": "createCanvas()",
    "text": "createCanvas()\nfunction setup() {\n  createCanvas(800, 600);    // width, height in pixels\n  createCanvas(400, 400);    // square canvas\n}\n\nCreates the drawing canvas\nFirst parameter: width in pixels\nSecond parameter: height in pixels\nUsually called once in setup()\nDefault size: 100x100 if not specified"
  },
  {
    "objectID": "getting-started/index.html#drawing-basic-shapes-rect",
    "href": "getting-started/index.html#drawing-basic-shapes-rect",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Drawing Basic Shapes: rect()",
    "text": "Drawing Basic Shapes: rect()\nfunction setup() {\n  createCanvas(400, 400);\n  rect(50, 50, 100, 75);     // x, y, width, height\n  rect(200, 200, 80, 80);    // square rectangle\n}\n\nrect(x, y, width, height)\nx, y: top-left corner position\nwidth: horizontal size\nheight: vertical size\nCoordinate system: (0,0) is top-left corner"
  },
  {
    "objectID": "getting-started/index.html#drawing-lines-line",
    "href": "getting-started/index.html#drawing-lines-line",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Drawing Lines: line()",
    "text": "Drawing Lines: line()\nfunction setup() {\n  createCanvas(400, 400);\n  line(0, 0, 100, 100);      // x1, y1, x2, y2\n  line(50, 200, 350, 50);    // diagonal line\n}\n\nline(x1, y1, x2, y2)\nDraws a straight line between two points\nx1, y1: starting point\nx2, y2: ending point\nLine thickness controlled by strokeWeight()"
  },
  {
    "objectID": "getting-started/index.html#rectangle-drawing-modes-rectmode",
    "href": "getting-started/index.html#rectangle-drawing-modes-rectmode",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Rectangle Drawing Modes: rectMode()",
    "text": "Rectangle Drawing Modes: rectMode()\nfunction setup() {\n  createCanvas(400, 400);\n  \n  rectMode(CORNER);          // default: x,y = top-left\n  rect(50, 50, 100, 75);\n  \n  rectMode(CENTER);          // x,y = center point\n  rect(200, 200, 100, 75);\n  \n  rectMode(CORNERS);         // x1,y1 to x2,y2\n  rect(250, 250, 350, 325);\n}"
  },
  {
    "objectID": "getting-started/index.html#fill-colors-fill",
    "href": "getting-started/index.html#fill-colors-fill",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Fill Colors: fill()",
    "text": "Fill Colors: fill()\nfunction setup() {\n  createCanvas(400, 400);\n  \n  fill(255, 0, 0);           // red\n  rect(50, 50, 100, 100);\n  \n  fill(0, 255, 0);           // green  \n  rect(200, 50, 100, 100);\n  \n  fill(0, 0, 255);           // blue\n  rect(50, 200, 100, 100);\n}\n\nfill() sets the interior color of shapes\nAffects all shapes drawn after it\nVarious formats: RGB, grayscale, hex codes"
  },
  {
    "objectID": "getting-started/index.html#outline-colors-stroke",
    "href": "getting-started/index.html#outline-colors-stroke",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Outline Colors: stroke()",
    "text": "Outline Colors: stroke()\nfunction setup() {\n  createCanvas(400, 400);\n  \n  stroke(255, 0, 0);         // red outline\n  strokeWeight(5);           // thick border\n  fill(255, 255, 0);         // yellow fill\n  rect(50, 50, 100, 100);\n  \n  stroke(0);                 // black outline\n  strokeWeight(1);           // thin border\n  noFill();                  // no interior color\n  rect(200, 200, 100, 100);\n}"
  },
  {
    "objectID": "getting-started/index.html#understanding-rgb-colors",
    "href": "getting-started/index.html#understanding-rgb-colors",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Understanding RGB Colors",
    "text": "Understanding RGB Colors\nfill(255, 0, 0);     // Pure Red\nfill(0, 255, 0);     // Pure Green  \nfill(0, 0, 255);     // Pure Blue\nfill(255, 255, 0);   // Yellow (Red + Green)\nfill(255, 0, 255);   // Magenta (Red + Blue)\nfill(0, 255, 255);   // Cyan (Green + Blue)\nfill(255, 255, 255); // White\nfill(0, 0, 0);       // Black\nfill(128, 128, 128); // Gray\n\nRed, Green, Blue values\nEach value: 0-255 (0 = none, 255 = maximum)\nMix values to create any color"
  },
  {
    "objectID": "getting-started/index.html#rgb-color-system-explained",
    "href": "getting-started/index.html#rgb-color-system-explained",
    "title": "Syllabus, Shapes, and Colors",
    "section": "RGB Color System Explained",
    "text": "RGB Color System Explained\n\nAdditive color model (light-based)\nEach pixel has red, green, and blue light components\n0: No light (dark/off)\n255: Maximum light (brightest)\nCombining all three at 255 = white light\nAll three at 0 = no light (black)"
  },
  {
    "objectID": "getting-started/index.html#rgba-transparency",
    "href": "getting-started/index.html#rgba-transparency",
    "title": "Syllabus, Shapes, and Colors",
    "section": "RGBA Transparency",
    "text": "RGBA Transparency\nYou can add a fourth “alpha” argument to color settings in p5.js, which sets the opacity.\nAlpha values run from 0 (totally transparent) to 255 for (totally opaque).\n// creates a red circle with 50% transaprency\nfill(255, 0, 0, 127);\ncircle(200, 200, 10);"
  },
  {
    "objectID": "getting-started/index.html#code-along-with-me",
    "href": "getting-started/index.html#code-along-with-me",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Code along with me!",
    "text": "Code along with me!\n\nor take notes if you prefer"
  },
  {
    "objectID": "getting-started/index.html#key-takeaways",
    "href": "getting-started/index.html#key-takeaways",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nsetup(): runs once, initialize your program\ndraw(): runs continuously, create animations\ncreateCanvas(): set your drawing area size\nrect() and line(): basic drawing commands\nfill() and stroke(): control colors\nrectMode(): change how rectangles are positioned\nRGB: mix red, green, blue values (0-255) for any color"
  },
  {
    "objectID": "getting-started/index.html#resources",
    "href": "getting-started/index.html#resources",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Resources",
    "text": "Resources\n\np5.js Official Website\np5.js Reference\np5.js Web Editor"
  },
  {
    "objectID": "getting-started/index.html#coordinate-systems",
    "href": "getting-started/index.html#coordinate-systems",
    "title": "Syllabus, Shapes, and Colors",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\n\nAdrian Piper, Charted Work Proposal for January – December 1969, 1968. Typescript and graph paper with space/time coordinate diagrams under sheet protectors in ring binder"
  },
  {
    "objectID": "creative-research/index.html#how-to-complete-quiz",
    "href": "creative-research/index.html#how-to-complete-quiz",
    "title": "Math + Language Quiz Day",
    "section": "How to Complete Quiz",
    "text": "How to Complete Quiz\n\nPut your computer to sleep\nYou have two documents: a printout of your code and a double-sided sheet of questions\nWhen I say begin, remove your paperclip and begin work\nNote that question 1 is worth the most points\nThe questions are about the bold section of your code, marked FOCUS BLOCK, which may appear anywhere in your code. The rest of your code is there for context.\nDo not feel pressure to use all the space provided. Often (but not always), a short simple answer will do the job.\nYou have thirty minutes. (If this is not enough time for most students, quiz will be curved – just do your best)"
  },
  {
    "objectID": "creative-research/index.html#forum-response-shares",
    "href": "creative-research/index.html#forum-response-shares",
    "title": "Math + Language Quiz Day",
    "section": "Forum Response Shares",
    "text": "Forum Response Shares\n\nLoops Forum\nLoops Demo Remix"
  },
  {
    "objectID": "creative-research/index.html#image-class-in-p5",
    "href": "creative-research/index.html#image-class-in-p5",
    "title": "Math + Language Quiz Day",
    "section": "Image Class in p5",
    "text": "Image Class in p5\nlet img;\n\n// Load the image.\nfunction preload() {\n  img = loadImage('/assets/laDefense.jpg');\n}\n\nfunction setup() {\n  createCanvas(100, 100);\n  background(50);\n  \n  // Draw the image.\n  image(img, 0, 0);\n}\nFrom p5 Web Reference. Also, see baby Yoda example"
  },
  {
    "objectID": "creative-research/index.html#assignment-summary",
    "href": "creative-research/index.html#assignment-summary",
    "title": "Math + Language Quiz Day",
    "section": "Assignment Summary",
    "text": "Assignment Summary\nIn your second project, due November 3, you will:\n\nUse coding concepts from Week 1-7\nUse research in a creative way, meaning you should directly reference and even analyze outside materials as part of the artwork\nYou can find some examples in the forum"
  },
  {
    "objectID": "creative-research/index.html#brainstorm-part-1",
    "href": "creative-research/index.html#brainstorm-part-1",
    "title": "Math + Language Quiz Day",
    "section": "Brainstorm, Part 1",
    "text": "Brainstorm, Part 1\n\nThe professor will set a timer.\nIn your notebook, write and draw about a potential creative research project.\nFeel free to reference resources from this week’s forum response.\nKeep your pen moving the whole time. (You may also use a tablet)"
  },
  {
    "objectID": "creative-research/index.html#brainstorm-part-2",
    "href": "creative-research/index.html#brainstorm-part-2",
    "title": "Math + Language Quiz Day",
    "section": "Brainstorm, Part 2",
    "text": "Brainstorm, Part 2\nIn your notebook or on your tablet (preferably in your own handwriting), write freely in response to the following questions\n\nHow will you represent or respond to your research creatively?\nHow will you give your research sources new meaning?"
  },
  {
    "objectID": "creative-research/index.html#exit-ticket",
    "href": "creative-research/index.html#exit-ticket",
    "title": "Math + Language Quiz Day",
    "section": "Exit Ticket",
    "text": "Exit Ticket\nFollow instructions in URCourses: In-Class Assignments &gt; Creative Research Brainstorm"
  }
]